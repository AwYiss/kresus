{"version":3,"file":"public/javascripts/app.js","sources":["app/application.coffee","app/collections/bank_accesses.coffee","app/collections/bank_accounts.coffee","app/collections/bank_operations.coffee","app/collections/banks.coffee","app/initialize.coffee","app/lib/app_helpers.coffee","app/lib/base_view.coffee","app/lib/view_collection.coffee","app/locale/en.coffee","app/models/bank.coffee","app/models/bank_access.coffee","app/models/bank_account.coffee","app/models/bank_operation.coffee","app/router.coffee","app/views/accounts.coffee","app/views/accounts_bank.coffee","app/views/accounts_bank_account.coffee","app/views/app.coffee","app/views/balance.coffee","app/views/balance_bank.coffee","app/views/balance_operations.coffee","app/views/bank_subtitle.coffee","app/views/bank_title.coffee","app/views/mockup.coffee","app/views/navbar.coffee","app/views/new_bank.coffee","app/views/search.coffee","app/views/search_bank.coffee","app/views/search_bank_subtitle.coffee","app/views/search_bank_title.coffee","app/views/search_operations.coffee","app/views/templates/accounts.jade","app/views/templates/accounts_bank.jade","app/views/templates/accounts_bank_account.jade","app/views/templates/app.jade","app/views/templates/balance.jade","app/views/templates/balance_bank_subtitle.jade","app/views/templates/balance_bank_title.jade","app/views/templates/balance_banks_empty.jade","app/views/templates/balance_operations_element.jade","app/views/templates/balance_operations_empty.jade","app/views/templates/balance_operations_header.jade","app/views/templates/mockup_balance.jade","app/views/templates/modal_confirm.jade","app/views/templates/navbar.jade","app/views/templates/new_bank.jade","app/views/templates/search_bank_subtitle.jade","app/views/templates/search_bank_title.jade","app/views/templates/search_operations.jade"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AArBA;;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAjCA;;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA1BA;;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAhCA;;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AArpCA;;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAjBA;;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAnBA;;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAfA;;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAtDA;;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AArjHA;;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AArhFA;;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAnDA;;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA/IA;;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAxCA;;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAtDA;;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAzBA;;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAnCA;;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAhFA;;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAhFA;;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAhEA;;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAnCA;;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAnDA;;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAvfjBA;;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAjBA;;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA","sourcesContent":["module.exports =\n\n    initialize: ->\n\n        # Routing management\n        Router = require 'router'\n        @router = new Router()\n        #Backbone.history.start()\n\n        # Makes this object immuable.\n        Object.freeze this if typeof Object.freeze is 'function'\n","BankAccess = require '../models/bank_access'\n\nmodule.exports = class BankAccesses extends Backbone.Collection\n\n    model: BankAccess\n    url: \"bankaccesses\"\n","BankAccount = require '../models/bank_account'\n\nmodule.exports = class BankAccounts extends Backbone.Collection\n\n    model: BankAccount\n    url: \"bankaccounts\"\n\n    constructor: (@bank) ->\n        @url = \"banks/getAccounts/\" + @bank.get(\"id\")\n        super()\n\n    getSum: ->\n        sum = 0\n        for account in @models\n            sum += Number(account.get(\"amount\"))\n        sum\n","BankOperation = require '../models/bank_operation'\n\nmodule.exports = class BankOperations extends Backbone.Collection\n\n    model: BankOperation\n    url: \"bankoperations\"\n\n    setAccount: (@account) ->\n        @url = \"bankaccounts/getOperations/\" + @account.get(\"id\")\n        #console.log @url\n","Bank = require '../models/bank'\n\nmodule.exports = class Banks extends Backbone.Collection\n\n    model: Bank\n    url: \"banks\"\n\n    getSum: ->\n        sum = 0\n        for bank in @models\n            sum += Number(bank.get(\"amount\"))\n            #console.log Number(bank.get(\"amount\"))\n        sum\n","app = require 'application'\nAppView = require 'views/app'\n\nBanksCollection = require 'collections/banks'\nBankOperationsCollection = require 'collections/bank_operations'\n\n# The function called from index.html\n$ ->\n    require 'lib/app_helpers'\n\n    ###\n            global variables\n    ###\n\n    # app, for nasty tricks\n    window.app = app\n\n    # internationalisation\n    window.polyglot = new Polyglot \n        \"phrases\": require 'locale/en'\n    window.i18n = (key) -> window.polyglot.t key\n\n    # collections, views\n    window.collections = {}\n    window.views = {}\n\n    # banks, operations\n    window.collections.banks = new BanksCollection()\n    window.collections.operations = new BankOperationsCollection()\n\n    ###\n            views\n    ###\n\n    # this one is tricky - it lays down the structure, so it needs to be rendered\n    # before any other view using that structure\n    window.views.appView = new AppView()\n    window.views.appView.render()\n\n    window.activeObjects = {}\n    _.extend(window.activeObjects, Backbone.Events);\n\n    # init\n    app.initialize()\n","(() ->\n    # IIFE to avoid collisions with other variables\n    (->\n        # Make it safe to do console.log() always.\n        console = window.console = window.console or {}\n        method = undefined\n        dummy = ->\n        methods = ('assert,count,debug,dir,dirxml,error,exception,\n                   group,groupCollapsed,groupEnd,info,log,markTimeline,\n                   profile,profileEnd,time,timeEnd,trace,warn').split ','\n\n        console[method] = console[method] or dummy while method = methods.pop()\n    )()\n)()\n\nNumber::formatMoney = (decPlaces, thouSeparator, decSeparator) ->\n    n = this\n    decPlaces = (if isNaN(decPlaces = Math.abs(decPlaces)) then 2 else decPlaces)\n    decSeparator = (if decSeparator is `undefined` then \".\" else decSeparator)\n    thouSeparator = (if thouSeparator is `undefined` then \",\" else thouSeparator)\n    sign = (if n < 0 then \"-\" else \"\")\n    i = parseInt(n = Math.abs(+n or 0).toFixed(decPlaces)) + \"\"\n    j = (if (j = i.length) > 3 then j % 3 else 0)\n    sign + ((if j then i.substr(0, j) + thouSeparator else \"\")) + i.substr(j).replace(/(\\d{3})(?=\\d)/g, \"$1\" + thouSeparator) + ((if decPlaces then decSeparator + Math.abs(n - i).toFixed(decPlaces).slice(2) else \"\"))\n\nNumber::money = ->\n    @formatMoney(2, \" \", \",\")\n\nDate::dateString = ->\n    addZeros = (num) ->\n        if Number(num) < 10\n            \"0\" + num\n        else\n            num\n    myDate = @\n    addZeros(myDate.getDate() + 1) + \"/\" + addZeros(myDate.getMonth()) + \"/\" + myDate.getFullYear()\n\nDate::timeString = ->\n    addZeros = (num) ->\n        if Number(num) < 10\n            \"0\" + num\n        else\n            num\n    myDate = @\n    addZeros(myDate.getHours()) + \":\" + addZeros(myDate.getMinutes())\n ","module.exports = class BaseView extends Backbone.View\n\n    template: ->\n\n    initialize: ->\n\n    getRenderData: ->\n        model: @model\n\n    render: ->\n        @beforeRender()\n        @$el.html @template(@getRenderData())\n        @afterRender()\n        @\n\n    beforeRender: ->\n\n    afterRender: ->\n\n    destroy: ->\n        @undelegateEvents()\n        @$el.removeData().unbind()\n        @remove()\n        Backbone.View::remove.call @\n","BaseView = require 'lib/base_view'\n\n# View that display a collection of subitems\n# used to DRY views\n# Usage : new ViewCollection(collection:collection)\n# Automatically populate itself by creating a itemView for each item\n# in its collection\n\n# can use a template that will be displayed alongside the itemViews\n\n# itemView       : the Backbone.View to be used for items\n# itemViewOptions : the options that will be passed to itemViews\n# collectionEl : the DOM element's selector where the itemViews will\n#                be displayed. Automatically falls back to el if null\n\nmodule.exports = class ViewCollection extends BaseView\n\n    itemview: null\n\n    views: {}\n\n    template: -> ''\n\n    itemViewOptions: ->\n\n    collectionEl: null\n\n    # add 'empty' class to view when there is no subview\n    onChange: ->\n        @$el.toggleClass 'empty', _.size(@views) is 0\n\n    # can be overriden if we want to place the subviews somewhere else\n    appendView: (view) ->\n        @$collectionEl.append view.el\n\n    # bind listeners to the collection\n    initialize: ->\n        super\n        @views = {}\n        @listenTo @collection, \"reset\",   @onReset\n        @listenTo @collection, \"add\",     @addItem\n        @listenTo @collection, \"remove\",  @removeItem\n\n        if not @collectionEl?\n            collectionEl = el\n\n    # if we have views before a render call, we detach them\n    render: ->\n        view.$el.detach() for id, view of @views\n        super\n\n    # after render, we reattach the views\n    afterRender: ->\n        @$collectionEl = $(@collectionEl)\n        @appendView view.$el for id, view of @views\n        @onReset @collection\n        @onChange @views\n\n    # destroy all sub views before remove\n    remove: ->\n        @onReset []\n        super\n\n    # event listener for reset\n    onReset: (newcollection) ->\n        view.remove() for id, view of @views\n        newcollection.forEach @addItem\n\n    # event listeners for add\n    addItem: (model) =>\n        options = _.extend {}, {model: model}, @itemViewOptions(model)\n        view = new @itemview(options)\n        @views[model.cid] = view.render()\n        @appendView view\n        @onChange @views\n\n    # event listeners for remove\n    removeItem: (model) =>\n        @views[model.cid].remove()\n        delete @views[model.cid]\n\n        @onChange @views","module.exports = \n\t#\n\t# Menu - topbar\n\t#\n    \"menu_accounts\" : \"Accounts\"\n    \"menu_balance\" : \"Balance\"\n    \"menu_search\" : \"Search\"\n    \"menu_add_bank\": \"Add a new bank access\"\n    \"overall_balance\": \"overall balance:\"\n\n    #\n    # Add a new bank dialog\n    #\n    \"add_bank_bank\" : \"Bank\"\n    \"add_bank_credentials\" : \"Credentials\"\n    \"add_bank_login\" : \"Login\"\n    \"add_bank_login_placeholder\" : \"enter login here\"\n    \"add_bank_password\" : \"Password\"\n    \"add_bank_password_placeholder\" : \"enter password here\"\n    \"add_bank_security_notice\" : \"Security notice\"\n    # the actual text of the security notice\n    \"add_bank_security_notice_text\" : \"In order to protect our customers, we implemented the best solutions...\"\n    # buttons\n    \"add_bank_cancel\" : \"cancel\"\n    \"add_bank_ok\" : \"Verify & Save\"\n\n    #\n    # Accounts\n    #\n    \"accounts_delete_bank\" : \"remove this bank from Cozy\"\n    \"accounts_delete_bank_title\" : \"Confirmation required\"\n    \"accounts_delete_bank_prompt\" : \"Are you sure ? This can't be undone, and will erase ALL your data from this bank.\"\n    \"accounts_delete_bank_confirm\" : \"delete permanently\"\n\n    \"accounts_delete_account\" : \"remove this account permanently from Cozy\"\n    \"accounts_delete_account_title\" : \"Confirmation required\"\n    \"accounts_delete_account_prompt\" : \"Are you sure ? This can't be undone, and will erase ALL your data from this account.\"\n    \"accounts_delete_account_confirm\" : \"delete permanently\"\n\n    #\n    # Misc\n    #\n    \"loading\" : \"loading...\"\n    \"verifying\" : \"verifying...\"\n    \"cancel\" : \"cancel\"\n    \"removing\" : \"removing...\"\n    \"error\" : \"error...\"\n    \"sent\" : \"sent successfully...\"\n    \"error_refresh\" : \"Sorry, there was an error. Please refresh and try again.\"\n\n    #\n    # Alerts\n    #\n    \"alert_sure_delete_bank\" : \"Are you sure ? This will remove all of your data from this bank, and can't be undone.\"\n    \"alert_sure_delete_account\" : \"Are you sure ? This will remove all of your data from this account, and can't be undone.\"\n    \"error_loading_accounts\" : \"There was an error loading bank accounts. Please refresh and try again later.\"\n    \"fatal_error\" : \"Something went wrong. Refresh.\"\n    \"error_check_credentials_btn\" : \"Could not log into the server. Click to retry.\"\n    \"error_check_credentials\" : \"We could not log into the bank's server. Please verify your credentials and try again.\"\n\n    #\n    # Balance\n    #\n    \"balance_please_choose_account\" : \"Please select an account on the left to display its operations\"\n    \"balance_banks_empty\" : \"There are currently no bank accounts saved in your Cozy. Go ahead and create the first one now !\"\n    # table headers\n    \"header_date\" : \"Date\"\n    \"header_title\": \"Title\"\n    \"header_amount\" : \"Amount\"\n","BankAccountsCollection = require '../collections/bank_accounts'\n\nmodule.exports = class Bank extends Backbone.Model\n\n    defaults:\n        amount: 0\n\n    checked: true\n\n    initialize: ->\n        @accounts = new BankAccountsCollection @\n        @listenTo @accounts, \"add\", @updateAmount\n        @listenTo @accounts, \"remove\", @updateAmount\n        @listenTo @accounts, \"destroy\", @updateAmount\n        @listenTo @accounts, \"change\", @updateAmount\n\n    updateAmount: ->\n        @set(\"amount\", @accounts.getSum())\n        console.log \"updated balance bank \" + @get(\"name\") + \" is now \" + @get(\"amount\")\n","module.exports = class BankAccess extends Backbone.Model\n\n    url: \"bankaccesses\"\n","BankOperationsCollection = require '../collections/bank_operations'\n\nmodule.exports = class BankAccount extends Backbone.Model\n\n    checked: true\n","module.exports = class BankOperation extends Backbone.Model\n","MockupView = require 'views/mockup'\nAppView = require 'views/app'\nBalanceView = require 'views/balance'\n\nmodule.exports = class Router extends Backbone.Router\n\n    routes:\n        '': 'balance'\n        'accounts': 'accounts'\n        'search' : 'search'\n\n    balance: ->\n        window.views.balanceView?.render()\n        $(\".menu-position\").removeClass(\"active\")\n        $(\".menu-1\").addClass(\"active\")\n\n    accounts: ->\n        window.views.accountsView?.render()\n        $(\".menu-position\").removeClass(\"active\")\n        $(\".menu-2\").addClass(\"active\")\n\n    search: ->\n        window.views.searchView?.render()\n        $(\".menu-position\").removeClass(\"active\")\n        $(\".menu-3\").addClass(\"active\")\n","BaseView = require '../lib/base_view'\nAccountsBankView = require './accounts_bank'\n\nmodule.exports = class AccountsView extends BaseView\n\n    template: require('./templates/accounts')\n\n    el: 'div#content'\n    elBanks: '.content-right-column'\n\n    render: ->\n\n        # load the template\n        super()\n\n        # prepare the banks list\n        for bank in window.collections.banks.models\n            view = new AccountsBankView bank\n            @$(@elBanks).append view.render().el\n        \n        # TODO - fix the compability issue with niceScroll\n        #@$('#balance-column-right').niceScroll()\n        @\n","BaseView = require '../lib/base_view'\nBankAccountsCollection = require '../collections/bank_accounts'\nAccountsBankAccountView = require './accounts_bank_account'\n\nmodule.exports = class AccountsBankView extends BaseView\n\n    template: require('./templates/accounts_bank')\n    templateModal: require('./templates/modal_confirm')\n\n    className: 'bank-group'\n\n    inUse: false\n\n    events:\n        \"click a.delete-bank\" : \"confirmDeleteBank\" \n\n    constructor: (@bank) ->\n        super()\n\n    initialize: ->\n        @listenTo @bank.accounts, \"add\", @render\n\n    confirmDeleteBank: (event) ->\n        event.preventDefault()\n\n        button = $ event.target\n\n        data = \n            title: window.i18n(\"accounts_delete_bank_title\")\n            body: window.i18n(\"accounts_delete_bank_prompt\")\n            confirm: window.i18n(\"accounts_delete_bank_confirm\")\n\n        $(\"body\").prepend @templateModal(data)\n        $(\"#confirmation-dialog\").modal()\n        $(\"#confirmation-dialog\").modal(\"show\")\n\n        $(\"a#confirmation-dialog-confirm\").bind \"click\", {button: button, bank: @bank, view: @}, @deleteBank\n\n    deleteBank: (event) ->\n        event.preventDefault()\n\n        $(\"#confirmation-dialog\").modal(\"hide\")\n        $(\"#confirmation-dialog\").remove()\n        \n        # recover the context\n        view = event.data.view\n        button = event.data.button\n        bank = event.data.bank\n\n        # user friendly buttons\n        oldText = button.html()\n        button.addClass \"disabled\"\n        button.html window.i18n(\"removing\") + \" <img src='./loader_inverse.gif' />\"\n\n        $.ajax\n            url: url = \"banks/\" + bank.get(\"id\")\n            type: \"DELETE\"\n            success: ->\n                # remove the accounts form inside\n                bank.accounts.remove(bank.accounts.models)\n                # empty the view\n                view.$el.html \"\"\n            error: (err) ->\n                console.log \"there was an error\"\n                console.log err\n                inUse = false\n                    \n    render: ->\n\n        view = @\n        viewEl = @$el\n        bank = @bank\n        \n        # get all accounts in this bank\n        @bank.accounts.fetch\n\n            success: (accounts) ->\n\n                # calculate the balance\n                bank.set(\"amount\", bank.accounts.getSum())\n                \n                # add the bank header\n                if accounts.length > 0\n                    view.$el.html view.template\n                        model: view.bank\n\n                    # add views for accounts, and store them in the table\n                    for account in accounts.models\n                        accountView = new AccountsBankAccountView account, view\n                        view.$(\"tbody#account-container\").append accountView.render().el\n\n                                    # nicescroll\n                    $(\".content-right-column\").niceScroll()\n                    $(\".content-right-column\").getNiceScroll().onResize()\n\n            error: () ->\n\n                alert window.i18n(\"error_loading_accounts\")\n        @\n","BaseView = require '../lib/base_view'\n\nmodule.exports = class AccountsBankAccountView extends BaseView\n\n    template: require('./templates/accounts_bank_account')\n    templateModal: require('./templates/modal_confirm')\n\n    tagName: \"tr\"\n\n    events:\n        \"click a.delete-account\" : \"confirmDeleteAccount\" \n\n    constructor: (@model, @parent) ->\n        super()\n\n    confirmDeleteAccount: (event) ->\n        event.preventDefault()\n\n        view = @\n        parent = @parent\n\n        button = $ event.target\n\n        data = \n            title: window.i18n(\"accounts_delete_account_title\")\n            body: window.i18n(\"accounts_delete_account_prompt\")\n            confirm: window.i18n(\"accounts_delete_account_confirm\")\n\n        $(\"body\").prepend @templateModal(data)\n        $(\"#confirmation-dialog\").modal()\n        $(\"#confirmation-dialog\").modal(\"show\")\n\n        $(\"a#confirmation-dialog-confirm\").bind \"click\", {button: button, model: @model, parent: @parent, view: @}, @deleteAccount\n\n    deleteAccount: (event) ->\n        event.preventDefault()\n\n        $(\"#confirmation-dialog\").modal(\"hide\")\n        $(\"#confirmation-dialog\").remove()\n        \n        # recover the context\n        parent = event.data.parent\n        view = event.data.view\n        button = event.data.button\n        model = event.data.model\n\n        # handle user firendly displaying progress\n        oldText = button.html()\n        button.addClass \"disabled\"\n        button.html window.i18n(\"removing\") + \" <img src='./loader_inverse.gif' />\"\n\n        model.url = \"bankaccounts/\" + model.get(\"id\")\n        model.destroy\n            success: (model) ->\n                console.log \"destroyed\"\n                view.destroy()\n                # it it was the only account in this bank, remove the bank from the list\n                if parent?.bank.accounts.length == 0\n                    parent.destroy()\n            error: (err) ->\n                console.log \"there was an error\"\n                console.log err\n\n    render: () ->\n        @$el.html @template\n            model: @model\n        @","BaseView = require '../lib/base_view'\n\nNavbarView = require 'views/navbar'\nNewBankView = require 'views/new_bank'\n\nAccountsView = require 'views/accounts'\nBalanceView = require 'views/balance'\nSearchView = require 'views/search'\n\n\nmodule.exports = class AppView extends BaseView\n\n    template: require('./templates/app')\n\n    el: 'body.application'\n\n    afterRender: ->\n        \n        # init - get the necessary data\n        window.collections.banks.fetch\n        \n            success: ->\n                if not @navbarView\n                    @navbarView = new NavbarView()\n                if not @newbankView\n                    @newbankView = new NewBankView()\n                if not window.views.balanceView\n                    window.views.balanceView = new BalanceView()\n                if not window.views.accountsView\n                    window.views.accountsView = new AccountsView()\n                if not window.views.searchView\n                    window.views.searchView = new SearchView()\n\n                @navbarView.render()\n                @newbankView.render()\n\n                # start routing\n                Backbone.history.start()\n            error: ->\n\n                # could not get banks, or 0 banks available - fatal error\n                console.log \"Fatal error: could not get the banks list\"\n                alert window.i18n \"fatal_error\"\n\n","BaseView = require '../lib/base_view'\n\nBalanceBankView = require './balance_bank'\nBalanceOperationsView = require \"./balance_operations\"\n\nmodule.exports = class BalanceView extends BaseView\n\n    template: require('./templates/balance')\n\n    el: 'div#content'\n\n    elAccounts: '#balance-column-left'\n    elOperations: '#balance-column-right'\n\n    accounts: 0\n\n    initialize: ->\n        @listenTo window.activeObjects, \"new_access_added_successfully\", @noMoreEmpty\n\n    noMoreEmpty: ->\n        console.log \"no more empty\"\n        @$(\".arrow\")?.hide()\n        @$(\".loading\")?.hide()\n\n    render: ->\n        # lay down the template\n        super()\n\n        # prepare the operations list\n        @operations = new BalanceOperationsView @$(@elOperations)\n        @operations.render()\n\n        # prepare the banks list\n        view = @\n        \n        treatment = (bank, callback) ->\n            viewBank = new BalanceBankView bank\n            # load loading placeholder\n            $(view.elAccounts).append viewBank.el\n            # get bank accounts\n            bank.accounts.fetch\n                success: (col) ->\n                    # return the number of accounts\n                    callback null, col.length\n                    viewBank.render()\n                error: (col, err, opts) ->\n                    callback null, col.length\n                    viewBank.$el.html \"\"\n\n        # render all banks\n        async.concat window.collections.banks.models, treatment, (err, results) ->\n            \n            if err\n                console.log err\n                alert window.i18n \"error_loading_accounts\"\n\n            @accounts = results.length\n\n            $(\"#balance-column-left\").niceScroll()\n            $(\"#balance-column-left\").getNiceScroll().onResize()\n            \n            # no accounts\n            if @accounts == 0\n                $(view.elAccounts).prepend require \"./templates/balance_banks_empty\"\n            \n        @\n","BaseView = require '../lib/base_view'\nBankTitleView = require './bank_title'\nBankSubTitleView = require './bank_subtitle'\n\nmodule.exports = class BalanceBankView extends BaseView\n\n    className: 'bank'\n\n    sum: 0\n\n    constructor: (@bank) ->\n        super()\n\n    initialize: ->\n        @listenTo @bank.accounts, \"add\", @addOne\n        @listenTo @bank.accounts, \"destroy\", @render\n\n    addOne: (account) ->\n        # add the account\n        viewAccount = new BankSubTitleView account\n        account.view = viewAccount\n        @$el.append viewAccount.render().el\n\n    render: ->\n\n        # generate the title\n        @viewTitle = new BankTitleView @bank\n        @$el.html @viewTitle.render().el\n        @viewTitle = null\n        @sum = 0\n\n        # add accounts\n        for account in @bank.accounts.models\n            @addOne account\n        @\n","BaseView = require '../lib/base_view'\nBankOperationsCollection = require \"../collections/bank_operations\"\n\nmodule.exports = class BalanceOperationsView extends BaseView\n\n    templateHeader: require './templates/balance_operations_header'\n    templateElement: require './templates/balance_operations_element'\n\n    events:\n        'click a.recheck-button' : \"checkAccount\"\n\n    inUse: false\n\n    constructor: (@el) ->\n        super()\n\n    setIntervalWithContext: (code,delay,context) ->\n        setInterval(() ->\n            code.call(context)\n        ,delay)\n\n    initialize: ->\n        @listenTo window.activeObjects, 'changeActiveAccount', @reload\n        @setIntervalWithContext @updateTimer, 1000, @\n\n    render: ->\n        @$el.html require \"./templates/balance_operations_empty\"\n        $(\"#balance-column-right\").niceScroll()\n        $(\"#balance-column-right\").getNiceScroll().onResize()\n        @\n\n    checkAccount: (event) ->\n        \n        event.preventDefault()\n        button = $ event.target\n        view = @\n\n        if not @inUse\n            console.log \"Checking account ...\"\n            view.inUse = true\n            button.html \"checking...\"\n            $.ajax\n                url: url = \"bankaccounts/retrieveOperations/\" + @model.get(\"id\")\n                type: \"GET\"\n                success: ->\n\n                    #update it's url\n                    view.model?.url = \"bankaccounts/\" + view.model?.get(\"id\")\n\n                    # update the model\n                    view.model?.fetch\n                        success: () ->\n                            console.log \"... checked\"\n                            button.html \"checked\"\n                            view.inUse = false\n                            view.reload view.model\n                        error: () ->\n                            console.log \"... there was an error fetching\"\n                            button.html \"error...\"\n                            view.inUse = false\n                error: (err) ->\n                    console.log \"... there was an error checking\"\n                    console.log err\n                    button.html \"error...\"\n                    view.inUse = false\n\n    updateTimer: () ->\n        if @model?\n            model = @model\n            @$(\"span.last-checked\").html \"Last checked #{moment(moment(model.get(\"lastChecked\"))).fromNow()}. \"\n\n    reload: (account) ->\n        \n        view = @\n        @model = account\n\n        # render the header - title etc\n        @$el.html @templateHeader\n            model: account\n\n        # get the operations for this account\n        window.collections.operations.reset()\n        window.collections.operations.setAccount account\n        window.collections.operations.fetch\n            success: (operations) ->\n\n                view.$(\"#table-operations\").html \"\"\n                view.$(\".loading\").remove()\n\n                # and render all of them\n                for operation in operations.models\n\n                    # add the operation to the table\n                    view.$(\"#table-operations\").append view.templateElement\n                        model: operation\n\n                # table sort\n                if not $.fn.DataTable.fnIsDataTable(@$(\"table.table\"))\n                    $('table.table').dataTable\n                        \"bPaginate\": false,\n                        \"bLengthChange\": false,\n                        \"bFilter\": true,\n                        \"bSort\": true,\n                        \"bInfo\": false,\n                        \"bAutoWidth\": false\n                        \"bDestroy\": true\n                        \"aoColumns\": [\n                            {\"sType\": \"date-euro\"}\n                            null\n                            null\n                        ]\n\n                # nicescroll\n                $(\"#balance-column-right\").niceScroll()\n                $(\"#balance-column-right\").getNiceScroll().onResize()\n        \n            error: ->\n                console.log \"error fetching operations\"\n        @\n","BaseView = require '../lib/base_view'\n\nmodule.exports = class BankSubTitleView extends BaseView\n\n    template: require('./templates/balance_bank_subtitle')\n\n    constructor: (@model) ->\n        super()\n\n    events:\n        \"click .row\" : \"chooseAccount\"\n\n    initialize: ->\n        @listenTo @model, 'change', @render\n        @listenTo window.activeObjects, 'changeActiveAccount', @checkActive\n\n    chooseAccount: (event) ->\n        console.log \"Account chosen: \" + @model.get(\"title\")\n        window.activeObjects.trigger \"changeActiveAccount\", @model\n\n    checkActive: (account) ->\n        @$(\".row\").removeClass(\"active\")\n        if account == @model\n            @$(\".row\").addClass(\"active\")\n","BaseView = require '../lib/base_view'\n\nmodule.exports = class BankTitleView extends BaseView\n\n    template: require('./templates/balance_bank_title')\n\n    constructor: (@model) ->\n        super()\n\n    initialize: ->\n        @listenTo @model, 'change', @update\n        @listenTo @model.accounts, \"add\", @update\n        @listenTo @model.accounts, \"destroy\", @update\n        @listenTo @model.accounts, \"request\", @displayLoading\n        @listenTo @model.accounts, \"change\", @hideLoading\n\n    displayLoading: ->\n        @$(\".bank-title-loading\").show()\n\n    hideLoading: ->\n        @$(\".bank-title-loading\").hide()\n\n    update: ->\n        # update the sum\n        @model.set(\"amount\", @model.accounts.getSum())\n        @$(\".bank-amount\").html Number(@model.get('amount')).money()\n\n        # display or hide the bank title\n        if @model.accounts.length == 0\n            @$(\".bank-title\").hide()\n            @$(\".bank-balance\").hide()\n        else\n            @$(\".bank-title\").show()\n            @$(\".bank-balance\").show()\n\n        # hide loader\n        @$(\".bank-title-loading\").hide()\n\n    render: ->\n        super()\n        @update()\n        @","BaseView = require '../lib/base_view'\n\n\nmodule.exports = class AppView extends BaseView\n\n    template: require('./templates/mockup_balance')\n\n    el: 'body.application'\n\n    afterRender: ->\n        $('.content-right-column').niceScroll()\n","BaseView = require '../lib/base_view'\n\n\nmodule.exports = class NavbarView extends BaseView\n\n    template: require('./templates/navbar')\n\n    el: 'div#navbar'\n    \n    initialize: ->\n        @listenTo window.collections.banks, \"change\", @refreshOverallBalance\n        @listenTo window.collections.banks, 'destroy', @refreshOverallBalance\n        @listenTo window.collections.banks, 'update', @refreshOverallBalance\n        @listenTo window.collections.banks, 'reset', @refreshOverallBalance\n\n    refreshOverallBalance: ->\n        sum = window.collections.banks.getSum()\n        console.log \"recalculating the overall balance: \" + sum\n        $(\"span#total-amount\").html sum.money()\n","BaseView = require '../lib/base_view'\nBankAccessModel = require '../models/bank_access'\n\nmodule.exports = class NewBankView extends BaseView\n\n    template: require('./templates/new_bank')\n\n    el: 'div#add-bank-window'\n\n    events:\n        'click #btn-add-bank-save' : \"saveBank\"\n\n    saveBank: (event) ->\n        event.preventDefault()\n\n        view = @\n\n        button = $ event.target\n        console.log button\n\n        oldText = button.html()\n        button.addClass \"disabled\"\n        button.html window.i18n(\"verifying\") + \"<img src='./loader_green.gif' />\"\n\n        button.removeClass 'btn-warning'\n        button.addClass 'btn-success'\n\n        @$(\".message-modal\").html \"\"\n\n        data =\n            login: $(\"#inputLogin\").val()\n            password: $(\"#inputPass\").val()\n            bank: $(\"#inputBank\").val()\n\n        bankAccess = new BankAccessModel data\n\n        bankAccess.save data,\n            success: (model, response, options) ->\n\n                button.html window.i18n(\"sent\") + \" <img src='./loader_green.gif' />\"\n\n                # fetch the new accounts:\n                bank = window.collections.banks.get(data.bank)\n                if bank?\n                    console.log \"Fetching for new accounts in bank\" + bank.get(\"name\")\n                    bank.accounts.trigger \"loading\"\n                    bank.accounts.fetch()\n\n                # success message\n                $(\"#add-bank-window\").modal(\"hide\")\n                button.removeClass \"disabled\"\n                button.html oldText\n                \n                window.activeObjects.trigger \"new_access_added_successfully\", model\n\n                setTimeout 500, () ->\n                    $(\"#add-bank-window\").modal(\"hide\")\n                \n            error: (model, xhr, options) ->\n                console.log \"Error :\" + xhr\n\n                button.html window.i18n(\"error_check_credentials_btn\")\n                button.removeClass 'btn-success'\n                button.removeClass 'disabled'\n                button.addClass 'btn-warning'\n\n                @$(\".message-modal\").html \"<div class='alert alert-danger'>\" + window.i18n(\"error_check_credentials\") + \"</div>\"\n\n    getRenderData: ->\n        banks: window.collections.banks.models\n","BaseView = require '../lib/base_view'\n\nSearchBankView = require './search_bank'\nSearchOperationsView = require \"./search_operations\"\n\nmodule.exports = class SearchView extends BaseView\n\n    template: require('./templates/balance')\n\n    el: 'div#content'\n\n    elAccounts: '#balance-column-left'\n    elOperations: '#balance-column-right'\n\n    accounts: 0\n\n    initialize: ->\n        @listenTo window.activeObjects, \"new_access_added_successfully\", @noMoreEmpty\n\n    noMoreEmpty: ->\n        console.log \"no more empty\"\n        @$(\".arrow\")?.hide()\n        @$(\".loading\")?.hide()\n\n    render: ->\n        # lay down the template\n        super()\n\n        # prepare the operations list\n        @operations = new SearchOperationsView @$(@elOperations)\n        @operations.render()\n\n        # prepare the banks list\n        view = @\n        \n        treatment = (bank, callback) ->\n            viewBank = new SearchBankView bank\n            # load loading placeholder\n            $(view.elAccounts).append viewBank.el\n            # get bank accounts\n            bank.accounts.fetch\n                success: (col) ->\n                    # return the number of accounts\n                    callback null, col.length\n                    viewBank.render()\n                error: (col, err, opts) ->\n                    callback null, col.length\n                    viewBank.$el.html \"\"\n\n        # render all banks\n        async.concat window.collections.banks.models, treatment, (err, results) ->\n            \n            if err\n                console.log err\n                alert window.i18n \"error_loading_accounts\"\n\n            @accounts = results.length\n\n            $(\"#balance-column-left\").niceScroll()\n            $(\"#balance-column-left\").getNiceScroll().onResize()\n            \n            # no accounts\n            if @accounts == 0\n                $(view.elAccounts).prepend require \"./templates/balance_banks_empty\"\n            \n        @\n","BaseView = require '../lib/base_view'\nSearchBankTitleView = require './search_bank_title'\nSearchBankSubTitleView = require './search_bank_subtitle'\n\nmodule.exports = class SearchBankView extends BaseView\n\n    className: 'bank'\n\n    events:\n        \"change .choice-bank\" : \"bankChosen\"\n\n    constructor: (@bank) ->\n        super()\n\n    initialize: ->\n        @listenTo @bank.accounts, \"add\", @addOne\n        @listenTo @bank.accounts, \"destroy\", @render\n\n    bankChosen: (event) ->\n\n        enabled = @$(event.target).prop(\"checked\")\n        console.log \"[Search] \" + @bank.get(\"name\") + \": \" + enabled\n\n        # check/uncheck all\n        $.each @$(\"input[type=checkbox].choice-account\"), (index, element) ->\n            $(element).prop \"checked\", enabled\n\n        # mark the entire bank as checked\n        @bank.checked = true\n\n        # and fire \"update\" on accounts\n        window.collections.banks.trigger \"search-update-accounts\"\n\n    addOne: (account) ->\n        # add the account\n        viewAccount = new SearchBankSubTitleView account\n        account.view = viewAccount\n        @$el.append viewAccount.render().el\n\n    render: ->\n\n        # generate the title\n        @viewTitle = new SearchBankTitleView @bank\n        @$el.html @viewTitle.render().el\n        @viewTitle = null\n        @sum = 0\n\n        # add accounts\n        for account in @bank.accounts.models\n            @addOne account\n        @\n","BaseView = require '../lib/base_view'\n\nmodule.exports = class SearchBankSubTitleView extends BaseView\n\n    template: require('./templates/search_bank_subtitle')\n\n    constructor: (@model) ->\n        super()\n\n    events:\n        \"change .choice-account\" : \"accountChosen\"\n\n    accountChosen: (event) ->\n\n    \t# get the value\n        enabled = @$(event.target).prop(\"checked\")\n        console.log \"[Search] \" + @model.get(\"title\") + \": \" + enabled\n\n        # mark the account as checked\n        @model.checked = true\n\n        # and fire \"update\" on accounts\n        window.collections.banks.trigger \"search-update-accounts\"\n\n    initialize: ->\n        @listenTo @model, 'change', @render\n","BaseView = require '../lib/base_view'\n\nmodule.exports = class SearchBankTitleView extends BaseView\n\n    template: require('./templates/search_bank_title')\n\n    constructor: (@model) ->\n        super()\n\n    initialize: ->\n        @listenTo @model.accounts, \"add\", @update\n        @listenTo @model.accounts, \"destroy\", @update\n        @listenTo @model.accounts, \"request\", @displayLoading\n        @listenTo @model.accounts, \"change\", @hideLoading\n\n    displayLoading: ->\n        @$(\".bank-title-loading\").show()\n\n    hideLoading: ->\n        @$(\".bank-title-loading\").hide()\n\n    update: ->\n\n        # display or hide the bank title\n        if @model.accounts.length == 0\n            @$(\".bank-title\").hide()\n            @$(\".bank-title-checkbox\").hide()\n        else\n            @$(\".bank-title\").show()\n            @$(\".bank-title-checkbox\").show()\n\n        # hide loader\n        @$(\".bank-title-loading\").hide()\n\n    render: ->\n        super()\n        @update()\n        @","BaseView = require '../lib/base_view'\nBankOperationsCollection = require \"../collections/bank_operations\"\n\nmodule.exports = class SearchOperationsView extends BaseView\n\n    templateElement: require './templates/balance_operations_element'\n\n    events:\n        \"change input\" : \"updateResults\"\n        \"keyup input\" : \"updateResults\"\n\n    constructor: (@el) ->\n        super()\n\n    updateResults: (event) ->\n        console.log \"Updating results\"\n\n        # get elements\n        caller = @$(event.target)\n\n        dateFrom = @$(\"input#search-date-from\")\n        dateTo = @$(\"input#search-date-to\")\n        amountFrom = @$(\"input#search-amount-from\")\n        amountTo = @$(\"input#search-amount-to\")\n        searchText = @$(\"input#search-text\")\n\n        # debug\n        #console.log caller\n        #console.log dateFrom.val() or null\n        #console.log dateTo.val() or null\n        #console.log amountFrom.val() or null\n        #console.log amountTo.val() or null\n        #console.log searchText.val() or null\n\n        # get values\n        dateFromVal = new Date(dateFrom.val())\n        dateToVal = new Date(dateTo.val())\n        amountFromVal = Number(amountFrom.val())\n        amountToVal = Number(amountTo.val())\n        searchTextVal = searchText.val()\n\n        # debug\n        console.log dateFromVal\n        console.log dateToVal\n        console.log amountFromVal\n        console.log amountToVal\n        console.log searchTextVal\n        \n        console.log caller[0] is amountFrom[0]\n\n        # validate/correct the arguments\n\n\n        # send query & display results\n\n    render: ->\n        @$el.html require \"./templates/search_operations\"\n        $(\"#balance-column-right\").niceScroll()\n        $(\"#balance-column-right\").getNiceScroll().onResize()\n        @\n\n",".row.content-background\n\t.col-lg-12.content-right-column","h2 #{model.get(\"name\")}\n\ta.btn.btn-cozy.pull-right.delete-bank\n\t\t| #{window.i18n(\"accounts_delete_bank\")}\ntable.table-accounts.table.table-striped.table-hover.table-bordered\n\ttbody#account-container\n","td.account-title #{model.get(\"title\")}\ntd.operation-amount\n\tspan.pull-right\n\ta.btn.btn-small.btn-cozy.pull-right.delete-account\n\t\t| #{window.i18n(\"accounts_delete_account\")}","// navigation bar\n#navbar.navbar.navbar-fixed-top.navbar-inverse\n\n// modal window to add a new bank\n#add-bank-window.modal\n\n// content\n#content.container\n",".row.content-background\n    #balance-column-left.col-lg-4.content-left-column\n\n    #balance-column-right.col-lg-8.content-right-column\n",".row.accounts-sub\n    .col-lg-7\n        p.pull-left #{model.get('title')}\n    .col-lg-5\n        p.pull-right #{Number(model.get('amount')).money()} \n            span.euro-sign &euro;\n",".row.accounts-top\n    .col-lg-7\n        p.pull-left \n            span.bank-title-loading\n                img(src=\"./loader.gif\") \n            span.bank-title\n                |  #{model.get('name')}\n    .col-lg-5\n        p.pull-right.bank-balance\n            span.bank-amount #{Number(model.get('amount')).money()} \n            span.euro-sign  &euro;\n","p.arrow.text-right\n    img(src=\"images/arrow_vertical.png\")\np.loading\n    | #{window.i18n(\"balance_banks_empty\")}\n","if (model.get(\"amount\") > 0)\n    tr.success\n        td.operation-date #{new Date(model.get('date')).dateString()}\n        td.operation-title #{model.get('title')}\n        td.operation-amount\n            span.pull-right #{Number(model.get('amount')).money()}\nelse\n    tr\n        td.operation-date #{new Date(model.get('date')).dateString()}\n        td.operation-title #{model.get('title')}\n        td.operation-amount\n            span.pull-right #{Number(model.get('amount')).money()}\n","br\nbr\np.loading\n   | #{window.i18n(\"balance_please_choose_account\")}","h2 #{model.get(\"title\")}\np\n    span.last-checked Last checked #{moment(moment(model.get(\"lastChecked\"))).fromNow()}. \n    a.recheck-button.btn-link recheck now\n\n.text-center.loading.loader-operations\n    img(src=\"./loader_big_blue.gif\")\n\ntable.table.tablesorter.table-striped.table-hover\n    thead\n        tr\n            th.text-left #{window.i18n(\"header_date\")}\n            th.text-center #{window.i18n(\"header_title\")}\n            th.text-right #{window.i18n(\"header_amount\")}\n    tbody#table-operations\n",".navbar.navbar-fixed-top.navbar-inverse\n  .container\n    button.navbar-toggle(type='button', data-toggle='collapse', data-target='.nav-collapse')\n      span.icon-bar\n      span.icon-bar\n      span.icon-bar\n    span.navbar-brand Cozy PFM\n    .nav-collapse.collapse\n      ul.nav.navbar-nav\n        li.active\n          a#menu-pos-balance(href='#') Balance\n        li\n          a#menu-pos-accounts(href='#accounts') Accounts\n        li\n          a#menu-pos-new-bank(data-toggle='modal', href='#add-bank-window') Add a new bank\n\n      ul.nav.navbar-nav.pull-right\n        p.navbar-text\n          | overall balance \n          span#total-amount +12967.72\n\n#content.container\n  .row.content-background\n    .col-lg-4.content-left-column\n\n      .row.accounts-top\n        .col-lg-8\n          p.pull-left Le Crédit Lyonnais\n        .col-lg-4\n          p.pull-right +12942.23 \n            span.euro-sign &euro;\n      .row.accounts-sub\n        .col-lg-8\n          p.pull-left Compte bancaire\n        .col-lg-4\n          p.pull-right +12942.23 \n            span.euro-sign &euro;\n\n      .row.accounts-top.active\n        .col-lg-8\n          p.pull-left Société Générale\n        .col-lg-4\n          p.pull-right +25.49 \n            span.euro-sign &euro;\n      .row.accounts-sub\n        .col-lg-8\n          p.pull-left Compte bancaire 1\n        .col-lg-4\n          p.pull-right +26.49 \n            span.euro-sign &euro;\n      .row.accounts-sub\n        .col-lg-8\n          p.pull-left Compte bancaire 2\n        .col-lg-4\n          p.pull-right -1.00 \n            span.euro-sign &euro;\n\n\n\n    .col-lg-8.content-right-column\n      h2 Société Générale\n\n      table#table-operations.table.table-striped.table-hover\n        tbody\n          tr\n            td.operation-date 17/07/2013\n            td.operation-title Ferrari Paris\n            td.operation-amount\n              span.pull-right -490550.00\n          tr.success\n            td.operation-date 17/07/2013\n            td.operation-title CB Tesco\n            td.operation-amount\n              span.pull-right.positive-balance +123.30\n          tr\n            td.operation-date 17/07/2013\n            td.operation-title CB Intermarché\n            td.operation-amount\n              span.pull-right -12.90\n          tr\n            td.operation-date 17/07/2013\n            td.operation-title Ferrari Paris\n            td.operation-amount\n              span.pull-right -490550.00\n          tr\n            td.operation-date 17/07/2013\n            td.operation-title CB Apple\n            td.operation-amount\n              span.pull-right - 1899.00\n          tr\n            td.operation-date 17/07/2013\n            td.operation-title CB Intermarché\n            td.operation-amount\n              span.pull-right -1.23\n          tr\n            td.operation-date 17/07/2013\n            td.operation-title CB Intermarché\n            td.operation-amount\n              span.pull-right -25.39\n          tr\n            td.operation-date 17/07/2013\n            td.operation-title CB Intermarché\n            td.operation-amount\n              span.pull-right -0.12\n          tr\n            td.operation-date 17/07/2013\n            td.operation-title Ferrari Paris\n            td.operation-amount\n              span.pull-right -490550.00\n          tr\n            td.operation-date 17/07/2013\n            td.operation-title CB Apple\n            td.operation-amount\n              span.pull-right - 1899.00\n          tr\n            td.operation-date 17/07/2013\n            td.operation-title CB Intermarché\n            td.operation-amount\n              span.pull-right -1.23\n          tr\n            td.operation-date 17/07/2013\n            td.operation-title CB Intermarché\n            td.operation-amount\n              span.pull-right -25.39\n          tr\n            td.operation-date 17/07/2013\n            td.operation-title CB Intermarché\n            td.operation-amount\n              span.pull-right -0.12\n          tr\n            td.operation-date 17/07/2013\n            td.operation-title CB Apple\n            td.operation-amount\n              span.pull-right - 1899.00\n          tr\n            td.operation-date 17/07/2013\n            td.operation-title CB Intermarché\n            td.operation-amount\n              span.pull-right -1.23\n          tr\n            td.operation-date 17/07/2013\n            td.operation-title CB Intermarché\n            td.operation-amount\n              span.pull-right -25.39\n          tr\n            td.operation-date 17/07/2013\n            td.operation-title CB Intermarché\n            td.operation-amount\n              span.pull-right -0.12\n          tr\n            td.operation-date 17/07/2013\n            td.operation-title Ferrari Paris\n            td.operation-amount\n              span.pull-right -490550.00\n          tr\n            td.operation-date 17/07/2013\n            td.operation-title CB Apple\n            td.operation-amount\n              span.pull-right - 1899.00\n          tr\n            td.operation-date 17/07/2013\n            td.operation-title CB Intermarché\n            td.operation-amount\n              span.pull-right -1.23\n          tr\n            td.operation-date 17/07/2013\n            td.operation-title CB Intermarché\n            td.operation-amount\n              span.pull-right -25.39\n          tr\n            td.operation-date 17/07/2013\n            td.operation-title CB Intermarché\n            td.operation-amount\n              span.pull-right -0.12\n\n  #add-bank-window.modal\n    .modal-dialog\n      .modal-content\n        .modal-header\n          button.close(type='button', data-dismiss='modal', aria-hidden='true') x\n          h4.modal-title Add a new bank\n        .modal-body\n          form\n            fieldset\n              legend Bank\n              .form-group\n                select.form-control\n                  option Le Crédit Lyonnais\n                  option Société Générale\n            fieldset\n              legend Credentials\n              .form-group\n                label(for='inputLogin') Login\n                input#inputLogin.form-control(type='text', placeholder='enter login')\n              .form-group\n                label(for='inputPass') Password\n                input#inputPass.form-control(type='password', placeholder='enter password')\n          h3.important-notice Security notice\n          p\n            | In order to protect our customers, we implemented the best solutions.\n          p\n            | We are great, because ...\n        .modal-footer\n          a.btn.btn-link(data-dismiss='modal',href='#') cancel\n          a.btn.btn-success(href='#') Verify & Save\n\n  //.row#foot\n    .col-lg-12\n      p.text-muted\n        | Click here to read about \n        a(href='#') our highest security standards\n      p.text-muted.pull-right\n        a(href='http://cozycloud.cc') CozyCloud.cc \n        | - the cloud you own.","#confirmation-dialog.modal\n  .modal-dialog\n    .modal-content\n      .modal-header\n        button.close(type='button', data-dismiss='modal', aria-hidden='true') x\n        h4.modal-title\n          | #{title}\n      .modal-body\n        p \n          | #{body}\n      .modal-footer\n        a.btn.btn-link(data-dismiss='modal',href='#') #{window.i18n(\"cancel\")}\n        a#confirmation-dialog-confirm.btn.btn-cozy(href='#') #{confirm}\n\n",".container\n  button.navbar-toggle(type='button', data-toggle='collapse', data-target='.nav-collapse')\n    span.icon-bar\n    span.icon-bar\n    span.icon-bar\n  span.navbar-brand Cozy PFM\n  .nav-collapse.collapse\n    ul.nav.navbar-nav\n      li.menu-position.menu-1\n        a#menu-pos-balance(href='#') #{window.i18n(\"menu_balance\")}\n      li.menu-position.menu-2\n        a#menu-pos-accounts(href='#accounts') #{window.i18n(\"menu_accounts\")}\n      li.menu-position.menu-3\n        a#menu-pos-accounts(href='#search') #{window.i18n(\"menu_search\")}\n      li\n        a#menu-pos-new-bank(data-toggle='modal', href='#add-bank-window') #{window.i18n(\"menu_add_bank\")}\n\n    ul.nav.navbar-nav.pull-right\n      p.navbar-text\n        | #{window.i18n(\"overall_balance\")} \n        span#total-amount 0,00\n",".modal-dialog\n  .modal-content\n    .modal-header\n      button.close(type='button', data-dismiss='modal', aria-hidden='true') x\n      h4.modal-title\n        | #{window.i18n(\"menu_add_bank\")}\n    .modal-body\n      .message-modal\n      form\n        fieldset\n          legend\n            | #{window.i18n(\"add_bank_bank\")}\n          .form-group\n            select#inputBank.form-control\n              each bank in banks\n                option(value=bank.get(\"id\"))\n                  =bank.get(\"name\")\n        fieldset\n          legend\n            | #{window.i18n(\"add_bank_credentials\")}\n          .form-group\n            label(for='inputLogin')\n              | #{window.i18n(\"add_bank_login\")}\n            input#inputLogin.form-control(type='text', placeholder=window.i18n(\"add_bank_login_placeholder\"))\n          .form-group\n            label(for='inputPass')\n              | #{window.i18n(\"add_bank_password\")}\n            input#inputPass.form-control(type='password', placeholder=window.i18n(\"add_bank_password_placeholder\"))\n      h3.important-notice \n        | #{window.i18n(\"add_bank_security_notice\")}\n      p \n        | #{window.i18n(\"add_bank_security_notice_text\")}\n    .modal-footer\n      a.btn.btn-link(data-dismiss='modal',href='#') #{window.i18n(\"add_bank_cancel\")}\n      a#btn-add-bank-save.btn.btn-success(href='#') #{window.i18n(\"add_bank_ok\")}\n",".row.accounts-sub\n    .col-lg-7\n        p.pull-left #{model.get('title')}\n    .col-lg-5\n        p.pull-right\n            if model.checked\n                input(type=\"checkbox\", checked).choice-account\n            else\n                input(type=\"checkbox\").choice-account\n",".row.accounts-top\n    .col-lg-7\n        p.pull-left \n            span.bank-title-loading\n                img(src=\"./loader.gif\") \n            span.bank-title\n                |  #{model.get('name')}\n    .col-lg-5\n        p.pull-right.bank-title-checkbox\n            if model.checked\n                input(type=\"checkbox\", checked).choice-bank\n            else\n                input(type=\"checkbox\").choice-bank","h3\n\t| Search\nform\n\t.row-fluid\n\t\t.col-lg-6\n\t\t\t.form-group\n\t\t\t\tlabel(for='inputLogin')\n\t\t\t\t\t| date from\n\t\t\t\tinput#search-date-from.form-control(type='date')\n\t\t.col-lg-6\n\t\t\t.form-group\n\t\t\t\tlabel(for='inputLogin')\n\t\t\t\t\t| date to\n\t\t\t\tinput#search-date-to.form-control(type='date')\n\n\t.row-fluid\n\t\t.col-lg-6\n\t\t\t.form-group\n\t\t\t\tlabel(for='inputLogin')\n\t\t\t\t\t| amount from\n\t\t\t\tinput#search-amount-from.form-control(type='number')\n\t\t.col-lg-6\n\t\t\t.form-group\n\t\t\t\tlabel(for='inputLogin')\n\t\t\t\t\t| amount to\n\t\t\t\tinput#search-amount-to.form-control(type='number')\n\n\t.row-fluid\n\t\t.col-lg-12\n\t\t\tlabel(for='inputLogin')\n\t\t\t\t| title contains\n\t\t\tinput#search-text.form-control(type='text', placeholder=window.i18n(\"add_bank_login_placeholder\"))\n\n.row-fluid\n\t.col-lg-12#search-operations-table\n"]}